name: ci

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go (tests)
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          check-latest: true
          cache: false   # avoid go.sum cache warnings

      - name: Go workspace sync
        run: |
          cat > go.work <<'EOF'
          go 1.22
          use (
            .
            ./core
          )
          EOF
          go work sync

      - name: Tidy modules
        run: |
          (cd core && go mod tidy)
          go mod tidy

      - name: Test (root module)
        run: go test ./...

      - name: Test (core module)
        run: |
          cd core
          go test ./...

  lint-root:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          check-latest: true
      - name: Tidy (root)
        run: go mod tidy
      - uses: golangci/golangci-lint-action@v6
        env:
          GOWORK: off
          GOTOOLCHAIN: local
        with:
          version: v1.59.1
          working-directory: .
          args: --timeout=5m
          skip-cache: true
          verify: true

  lint-core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          check-latest: true
      - name: Tidy (core)
        run: |
          cd core
          go mod tidy
      - uses: golangci/golangci-lint-action@v6
        env:
          GOWORK: off
          GOTOOLCHAIN: local
        with:
          version: v1.59.1
          working-directory: core
          # Explicitly point to core's config so it doesn't inherit the root one
          args: -c .golangci.yml --timeout=5m
          skip-cache: true
          verify: true
