name: ci

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go (tests)
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          check-latest: true
          cache: false

      - name: Go workspace sync
        run: |
          cat > go.work <<'EOF'
          go 1.22
          use (
            .
            ./core
          )
          EOF
          go work sync

      - name: Tidy modules
        run: |
          (cd core && go mod tidy)
          go mod tidy

      - name: Test (root module)
        shell: bash
        env:
          # Keep memory modest so the runner doesnâ€™t OOM-kill the process.
          GOMEMLIMIT: 1GiB
          GOMAXPROCS: 2
          CGO_ENABLED: 0
        run: |
          set -Eeuo pipefail
          trap 'echo "::error::go test (root) received SIGTERM (likely job cancelled or OOM). Exit 143." ; exit 143' TERM
          echo "::group::go env"
          go env
          echo "::endgroup::"
          echo "::group::go test ./... (root)"
          # -count=1 avoids stale cache; -vet=off keeps it lean
          go test -count=1 -vet=off ./... | tee test-root.log
          echo "::endgroup::"

      - name: Upload root test log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-root.log
          path: test-root.log

      - name: Test (core module)
        working-directory: core
        shell: bash
        env:
          GOMEMLIMIT: 1GiB
          GOMAXPROCS: 2
          CGO_ENABLED: 0
        run: |
          set -Eeuo pipefail
          trap 'echo "::error::go test (core) received SIGTERM (likely job cancelled or OOM). Exit 143." ; exit 143' TERM
          echo "::group::go test ./... (core)"
          go test -count=1 -vet=off ./... | tee ../test-core.log
          echo "::endgroup::"

      - name: Upload core test log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-core.log
          path: test-core.log

      - name: System snapshot (if failed)
        if: failure()
        run: |
          echo "::group::system snapshot"
          uname -a || true
          free -h || true
          df -h || true
          ulimit -a || true
          ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head -n 30 || true
          echo "::endgroup::"

  lint-root:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          check-latest: true
          cache: false
      - name: Tidy (root)
        run: go mod tidy
      - name: Lint (root)
        uses: golangci/golangci-lint-action@v6
        env:
          GOWORK: off
          GOTOOLCHAIN: local
        with:
          version: v1.59.1
          working-directory: .
          args: --timeout=5m --fix
          skip-cache: true
          verify: true

  lint-core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          check-latest: true
          cache: false
      - name: Tidy (core)
        run: |
          cd core
          go mod tidy
      - name: Lint (core)
        uses: golangci/golangci-lint-action@v6
        env:
          GOWORK: off
          GOTOOLCHAIN: local
        with:
          version: v1.59.1
          working-directory: core
          args: -c .golangci.yml --timeout=5m --fix
          skip-cache: true
          verify: true
